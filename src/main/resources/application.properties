# General

server.port = ${SERVER_PORT:8080}
spring.resources.static-locations = ${SPRING_RESOURCES_STATIC_LOCATIONS:classpath:/static/}
spring.servlet.multipart.max-file-size = ${SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE:100MB}
spring.servlet.multipart.max-request-size = ${SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE:1000MB}
management.endpoints.web.exposure.include = ${MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE:*}

# Database

spring.jpa.hibernate.ddl-auto = ${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.properties.hibernate.dialect = ${SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT:org.hibernate.dialect.H2Dialect}

spring.datasource.driver-class-name = ${SPRING_DATASOURCE_DRIVER_CLASS_NAME:org.h2.Driver}
spring.datasource.url = ${SPRING_DATASOURCE_URL:jdbc:h2:mem:teamone;DB_CLOSE_ON_EXIT=FALSE}
spring.datasource.username = ${SPRING_DATASOURCE_USERNAME:sa}
spring.datasource.password = ${SPRING_DATASOURCE_PASSWORD}
spring.datasource.connectionProperties = ${SPRING_DATASOURCE_CONNECTIONPROPERTIES}

# SSL configuration

security.require-ssl = ${SECURITY_REQUIRE_SSL:false}
server.ssl.enabled = ${SERVER_SSL_ENABLED:false}
server.ssl.key-store = ${SERVER_SSL_KEY_STORE}
server.ssl.key-store-password = ${SERVER_SSL_KEY_STORE_PASSWORD}
server.ssl.keyStoreType = ${SERVER_SSL_KEYSTORETYPE}
server.ssl.keyAlias = ${SERVER_SSL_KEYALIAS}

# The Docker file starts Open Team One Server with the command line option
# -Dspring.config.additional-location=file:/opt/openTeamOneServer/config/
# allowing to override and inject further local properties via file
# /opt/openTeamOneServer/config/application.properties

